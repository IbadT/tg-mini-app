name: Client CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'client/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'client/**'

jobs:
  # Проверка клиента
  client-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: ./client
        run: npm ci

      - name: Lint with ESLint
        working-directory: ./client
        run: npm run lint

      - name: Type check
        working-directory: ./client
        run: npm run type-check || npx tsc --noEmit

  # Тестирование клиента
  client-test:
    runs-on: ubuntu-latest
    needs: client-lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: ./client
        run: npm ci

      - name: Run tests
        working-directory: ./client
        run: npm test --if-present

      - name: Run tests with coverage
        working-directory: ./client
        run: npm run test:coverage --if-present

  # Сборка клиента
  client-build:
    runs-on: ubuntu-latest
    needs: [client-lint, client-test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: ./client
        run: npm ci

      - name: Build
        working-directory: ./client
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: client-build
          path: ./client/dist
          retention-days: 30

  # Деплой клиента на Vercel (пример)
  client-deploy-vercel:
    runs-on: ubuntu-latest
    needs: client-build
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: client-build
          path: ./client/dist

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./client
          vercel-args: '--prod'

  # Деплой клиента на Netlify (альтернатива)
  client-deploy-netlify:
    runs-on: ubuntu-latest
    needs: client-build
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: client-build
          path: ./client/dist

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './client/dist'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }} 